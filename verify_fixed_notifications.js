/**
 * MunaLuna Notification System Verification
 * 
 * This script tests the improved notification system that properly handles
 * Telegram chat IDs to ensure notifications work in Mini App environment.
 */

import * as miniAppNotify from './server/mini_app_notification.js';
import * as chatManager from './server/telegram-chat-manager.js';

// Default Telegram ID for testing
const TELEGRAM_ID = '262371163';

async function testFixedNotifications() {
  console.log(`\nüåô Testing Fixed Telegram Notification System üåô`);
  console.log(`Time: ${new Date().toLocaleString()}\n`);
  
  try {
    // 1. First test with direct notification
    console.log(`\n1Ô∏è‚É£ Testing direct notification with chat manager...`);
    
    const directMessage = `
<b>üîî –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π MunaLuna</b>

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π,
–∫–æ—Ç–æ—Ä–∞—è —Ç–µ–ø–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç ID —á–∞—Ç–∞ –≤ Telegram.

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleTimeString()}
üîÑ –¢–∏–ø: –ü—Ä—è–º–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä —á–∞—Ç–æ–≤

–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram, –∑–Ω–∞—á–∏—Ç —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!
`;
    
    const directResult = await miniAppNotify.sendMiniAppNotification(TELEGRAM_ID, directMessage);
    console.log(`Direct notification result: ${directResult ? 'Success ‚úÖ' : 'Failed ‚ùå'}`);
    
    // Wait 2 seconds before next test
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // 2. Test with alternative notification approach
    console.log(`\n2Ô∏è‚É£ Testing alternative notification approach...`);
    
    const alternativeMessage = `
<b>üîî –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ MunaLuna</b>

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º —á–∞—Ç–æ–≤.

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleTimeString()}
üîÑ –¢–∏–ø: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ

–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –æ–±–∞ –ø–æ–¥—Ö–æ–¥–∞ —Ä–∞–±–æ—Ç–∞—é—Ç!
`;
    
    // Simulate the alternative approach directly
    const alternativeResult = await miniAppNotify.sendTrackerMiniAppNotification(TELEGRAM_ID, alternativeMessage);
    console.log(`Alternative notification result: ${alternativeResult ? 'Success ‚úÖ' : 'Failed ‚ùå'}`);
    
    // Check if we have a cached chat ID now
    const cachedId = chatManager.getCachedChatId(TELEGRAM_ID);
    console.log(`Cached chat ID for ${TELEGRAM_ID}: ${cachedId || 'Not found'}`);
    
    // Summary
    console.log(`\n‚úÖ Notification testing complete!`);
    console.log(`If you received both messages in your Telegram, our fix was successful.`);
    console.log(`Our system now correctly handles Telegram chat IDs for notifications.`);
    
  } catch (error) {
    console.error(`\n‚ùå Error testing notifications:`, error);
  }
}

// Run the test
testFixedNotifications();