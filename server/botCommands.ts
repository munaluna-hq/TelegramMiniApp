import fetch from "node-fetch";

/**
 * Welcome message sent to users when they first start the bot
 */
const WELCOME_MESSAGE = `üåô <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MunaLuna!</b> üåô

–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º! –Ø –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∏ –ø–æ–∫–ª–æ–Ω–µ–Ω–∏–π.

<b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª
‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –Ω–∞–º–∞–∑–∞—Ö
‚Ä¢ –ü–æ–º–æ–≥–∞—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ –ø–æ–∫–ª–æ–Ω–µ–Ω–∏—è
‚Ä¢ –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Mini App, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º.

<b>–ê–ª—å—Ö–∞–º–¥—É–ª–∏–ª–ª—è—Ö!</b> –ù–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å" –Ω–∏–∂–µ.`;

/**
 * Handles the /start command for the Telegram bot
 * Sends a welcome message to the user
 */
export async function handleStartCommand(telegramId: string): Promise<boolean> {
  try {
    if (!process.env.TELEGRAM_BOT_TOKEN) {
      console.error("Telegram bot token not configured");
      return false;
    }
    
    // Make the API call to Telegram
    const apiUrl = `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`;
    
    const requestBody = {
      chat_id: telegramId,
      text: WELCOME_MESSAGE,
      parse_mode: "HTML"
    };
    
    console.log(`Sending welcome message to user ID: ${telegramId}`);
    
    const response = await fetch(apiUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(requestBody),
    });
    
    const data = await response.json() as any;
    
    if (!data.ok) {
      console.error(`Telegram API error: ${data.description}`);
      return false;
    } else {
      console.log(`Welcome message successfully sent to user ${telegramId}`);
      return true;
    }
  } catch (error) {
    console.error("Error sending welcome message:", error);
    return false;
  }
}